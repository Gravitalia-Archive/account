---
import Layout from "../layouts/Layout.astro";
import { t } from "../../Translator";

const locale = `; ${Astro.request.headers.get("cookie")}`?.split(`; locale=`)[1]?.split(";")[0] ||
Astro.request.headers.get("accept-language")?.split(",")[0]?.split("-")[0] ||
"en";
const cookie = `; ${Astro.request.headers.get("cookie")}`?.split(`; session=`)[1]?.split(";")[0];
if(cookie) {
    let user = await fetch("https://oauth.gravitalia.com/users/@me", {
		headers: {
			"Authorization": cookie
		}
	})
	.then(res => res.json())
	.catch(_ => null)
	.then(res => res);
	
	if(user?.username) return Astro.redirect("/");
}
---

<Layout title="Sign up - Gravitalia Account" absolute={true}>
	<p id="ratelimit" class="hidden flex h-10 items-center justify-center bg-[#332b43] px-4 text-sm font-medium text-white sm:px-6 lg:px-8">
        <span class="underline pr-1">{t("Slow down!", locale)} </span> {t("You can only create an account every 5 minutes", locale)}
    </p>

	<div id="CF-Token-Generator" class="cf-turnstile" data-sitekey="0x4AAAAAAABG7Pcx4-fniaty" data-theme="auto" data-language={locale} data-callback="cf_callback"></div>
	<div class="mt-28 h-[60vh] xl:h-[50vh] xl:mt-40 flex justify-center items-center">
		<div class="p-11 border-[1px] -mt-10 border-none lg:border-solid border-slate-200 dark:border-zinc-800 dark:bg-zinc-800 rounded-md flex flex-col items-center space-y-3 shadow-md">
			<img width="30" height="30" draggable="false" alt="Gravitalia logo" src="/favicon.webp" />
			<p class="text-lg font-semibold">{t("Let us connect you!", locale)}</p>
			<div id="first" class="space-y-2">
				<div class="flex space-x-2">
					<input id="firstname" type="text" class="p-2 border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-[9.75rem]" placeholder={t("Firstname", locale)} />
					<input id="lastname" type="text" class="p-2 border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-[9.75rem]" placeholder={t("Name", locale)} />
				</div>
				<input id="email" type="email" class="p-2 border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-80" placeholder={t("Email adress", locale)} />
				<br />
				<input id="password" type="password" class="p-2 border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-80" placeholder={t("Password", locale)} />
				<p id="password-tips" class="text-xs w-full dark:text-gray-300">{t("At least 8 characters with numbers and symbols", locale)}</p>
			</div>
			<div id="second" class="hidden">
				<label for="vanity" class="w-full">{t("Username", locale)} <span class="text-xs w-full text-red-500">*</span></label>
				<div class="flex w-full">
					<div id="vanity_div" class="flex flex-row border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-80">
						<span class="rounded-l-lg w-1/3 p-2 flex justify-center items-center text-sm">
							gravitalia.com/
						</span>
						<input id="vanity" class="focus:outline-none w-28 pl-1 text-sm" placeholder={t("Username", locale).toLowerCase()}>
					</div>
				</div>
				<br />
				<label for="birth">{t("Birthdate", locale)} <span class="text-xs w-full dark:text-gray-300">{t("(optional field)", locale)}</span></label>
				<br />
				<input id="birth" type="date" class="p-2 border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-80" placeholder={t("Birthdate", locale)} max="2023" min="1920" />
				<br />
				<p id="tos-tips" class="mt-3 text-xs w-full dark:text-gray-300 w-4/5" set:html={t("accept_tos_privacy", locale)}></p>
			</div>
			<div class="flex flex-wrap w-full pt-4">
				<a href="/signin" id="create_acc" class="text-sm px-2 py-2 bg-indigo-50 dark:bg-opacity-0 dark:border-none outline-none border border-indigo-100 rounded text-indigo-500 dark:text-white font-medium hover:bg-indigo-400 dark:hover:bg-indigo-500 hover:text-white transition-colors duration-200">
					{t("Sign in", locale)}
				</a>
				<button id="back_btn" onclick="back()" class="hidden text-sm px-2 py-2 bg-indigo-50 dark:bg-[#7f5af0] outline-none border border-indigo-100 dark:border-[#7f5af0] rounded text-indigo-500 dark:text-white font-medium hover:bg-indigo-400 dark:hover:bg-[#7f5af0] hover:text-white transition-colors duration-200">
					{t("Back", locale)}
				</button>
				<span class="pl-32 xl:pl-40">
					<button id="next" onclick="next()" class="text-sm px-4 py-2 outline-none rounded bg-[#332b43] dark:bg-indigo-500 dark:hover:bg-indigo-600 font-medium text-white disabled:opacity-75 transition-colors duration-200 disabled:cursor-not-allowed">
						{t("Next", locale)}
					</button>
				</span>
			</div>
		</div>
	</div>
</Layout>

<script lang="js">
	let cf_token = "";

	async function next() {
		if(!document.getElementById("first")?.classList.value.includes("hidden")) {
			if(!document.getElementById("firstname").value || document.getElementById("firstname").value.length >= 16) {
				document.getElementById("password")?.classList.remove("border-red-500");
				document.getElementById("email")?.classList.remove("border-red-500");
				document.getElementById("firstname")?.classList.add("border-red-500");
			} else if((!document.getElementById("email").value.match(/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,7})$/))) {
				document.getElementById("password")?.classList.remove("border-red-500");
				document.getElementById("firstname")?.classList.remove("border-red-500");
				document.getElementById("email")?.classList.add("border-red-500");
			} else if(!document.getElementById("password").value.match(/([0-9|*|]|[$&+,:;=?@#|'<>.^*()%!-_])+/) || !document.getElementById("password").value.match(/[A-z]/) || document.getElementById("password").value.length < 8) {
				document.getElementById("email")?.classList.remove("border-red-500");
				document.getElementById("firstname")?.classList.remove("border-red-500");
				document.getElementById("password")?.classList.add("border-red-500");
			} else {
				document.getElementById("first")?.classList.add("hidden");
				document.getElementById("second")?.classList.remove("hidden");
				document.getElementById("create_acc")?.classList.add("hidden");
				document.getElementById("back_btn")?.classList.remove("hidden");
			}
		} else {
			if(!document.getElementById("vanity").value || !document.getElementById("vanity").value.match(/[A-z|0-9|_]{3,16}/)) {
				document.getElementById("password")?.classList.remove("border-red-500");
				document.getElementById("email")?.classList.remove("border-red-500");
				document.getElementById("firstname")?.classList.remove("border-red-500");
				document.getElementById("vanity_div")?.classList.add("border-red-500");
			} else if(document.getElementById("birth").value && new Date().getFullYear()-parseInt(document.getElementById("birth").value.split("-")[0], 10) < 13) {
				document.getElementById("vanity_div")?.classList.remove("border-red-500");
				document.getElementById("birth")?.classList.add("border-red-500");
			} else {
				document.getElementById("password")?.classList.remove("border-red-500");
				document.getElementById("email")?.classList.remove("border-red-500");
				document.getElementById("firstname")?.classList.remove("border-red-500");
				document.getElementById("vanity_div")?.classList.remove("border-red-500");
				document.getElementById("birth")?.classList.remove("border-red-500");

				const res = await create();
				if(res === "email") {
					back();
					document.getElementById("email")?.classList.add("border-red-500");
				} else if(res === "vanity") {
					document.getElementById("vanity_div")?.classList.add("border-red-500");
				}
			}
		}
	}

	function back() {
		document.getElementById("first")?.classList.remove("hidden");
		document.getElementById("second")?.classList.add("hidden");
		document.getElementById("create_acc")?.classList.remove("hidden");
		document.getElementById("back_btn")?.classList.add("hidden");
	}

	function create() {
		return new Promise(async (resolve, reject) => {
			if(cf_token.length === 0) {
				const MATCH = document.getElementById("CF-Token-Generator").innerHTML.match(/value=".*">/gm);
				if(!MATCH) setTimeout(() => {return create()}, 1000);
				else cf_token = MATCH[0]?.replace(/value="/g, "")?.replace(/">/g, "");
			}

			if(document.getElementById("email").value === "") return resolve("email");
			fetch("https://oauth.gravitalia.com/create", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
					"CF-Turnstile-Token": cf_token,
					"Sec": await window.fingerprint()
				},
				body: JSON.stringify({
					username: document.getElementById("firstname").value + (document.getElementById("lastname").value ? ` ${document.getElementById("lastname").value}` : ""),
					vanity: document.getElementById("vanity").value.toLowerCase(),
					birthdate: document.getElementById("birth").value,
					email: document.getElementById("email").value,
					password: document.getElementById("password").value
				})
			})
			.catch(_ => resolve("email"))
			.then(res => res?.json())
			.then(res => {
				if(res?.message === "Invalid email") {
					resolve("email");
				} else if(res?.message === "Invalid vanity") {
					resolve("vanity");
				} else if(res?.error) {
					resolve("ratelimit");
				} else {
					resolve(res.token);
				}
			});
		});
	}

	function cf_callback(token) {
		cf_token = token;
	}
</script>
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
