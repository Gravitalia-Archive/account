---
import Layout from "../../layouts/Layout.astro";
import { t } from "../../../Translator";

const locale = `; ${Astro.request.headers.get("cookie")}`?.split(`; locale=`)[1]?.split(";")[0] ||
Astro.request.headers.get("accept-language")?.split(",")[0]?.split("-")[0] ||
"en";

if(!Astro.url.searchParams.get("code")) return Astro.redirect("/signin");

const cookie = `; ${Astro.request.headers.get("cookie")}`?.split(`; session=`)[1]?.split(";")[0];
if(cookie) {
    let user = await fetch("https://oauth.gravitalia.com/users/@me", {
		headers: {
			"Authorization": cookie
		}
	})
	.then(res => res.json())
	.catch(_ => null)
	.then(res => res);
	
	if(user?.username) return Astro.redirect("/");
}
---

<Layout title="Password reset - Gravitalia Account" absolute={true}>
	<div id="CF-Token-Generator" class="cf-turnstile" data-sitekey="0x4AAAAAAABG7Pcx4-fniaty" data-theme="auto" data-language={locale} data-callback="cf_callback"></div>
	<div class="mt-28 h-[60vh] xl:h-[50vh] xl:mt-40 flex justify-center items-center">
		<div class="p-11 border-[1px] -mt-10 border-none lg:border-solid border-slate-200 dark:border-zinc-800 dark:bg-zinc-800 rounded-md flex flex-col items-center space-y-3 shadow-sm">
			<br />
			<img width="30" height="30" draggable="false" alt="Gravitalia logo" src="/favicon.webp" />
			<p class="text-lg font-semibold">{t("Update password", locale)}</p>
			<br /><br />
            <label for="password" id="ise" class="hidden text-sm text-red-500 w-full">{t("Internal server error", locale)}</label>
			<label for="password" id="notmatch" class="hidden text-sm text-red-500 w-full">{t("Passwords do not match", locale)}</label>
            <input id="password" type="password" class="p-2 border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-80" placeholder={t("Password", locale)} />
            <input id="confirm_password" type="password" class="p-2 border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-80" placeholder={t("Password confirmation", locale)} />
			<p id="password-tips" class="text-xs w-full dark:text-gray-300">{t("At least 8 characters with numbers and symbols", locale)}</p>
			<div class="flex justify-between w-full">
				<a href="/signin" rel="prefetch" id="signin" class="text-sm px-2 py-2 bg-indigo-50 dark:bg-opacity-0 dark:border-none outline-none border border-indigo-100 rounded text-indigo-500 dark:text-white font-medium hover:bg-indigo-400 dark:hover:bg-indigo-500 hover:text-white transition-colors duration-200">
					{t("Sign in", locale)}
				</a>
				<button id="next" onclick="next()" class="text-sm px-4 py-2 outline-none rounded bg-[#332b43] dark:bg-indigo-500 dark:hover:bg-indigo-600 font-medium text-white disabled:opacity-75 transition-colors duration-200 disabled:cursor-not-allowed">
					{t("Update", locale)}
				</button>
			</div>
		</div>
	</div>
</Layout>

<script lang="js">
	const params = new Proxy(new URLSearchParams(window.location.search), {
		get: (searchParams, prop) => searchParams.get(prop),
	});
	let cf_token = "";

    function next() {
        document.getElementById("next").disabled = true;
		if(document.getElementById("password")["value"] !== document.getElementById("confirm_password")["value"]) {
			document.getElementById("next").disabled = false;
			document.getElementById("notmatch").classList.remove("hidden");
		} else if(!document.getElementById("password").value.match(/([0-9|*|]|[$&+,:;=?@#|'<>.^*()%!-_])+/) || !document.getElementById("password").value.match(/[A-z]/) || document.getElementById("password").value.length < 8) {
			document.getElementById("password").classList.add("border-red-500");
			document.getElementById("confirm_password").classList.add("border-red-500");
			document.getElementById("password-tips").classList.add("text-red-500");
			document.getElementById("next").disabled = false;
		} else {
			fetch("https://oauth.gravitalia.com/login/password", {
				method: "PATCH",
				headers: {
					"Content-Type": "application/json",
					"CF-Turnstile-Token": cf_token,
				},
				body: JSON.stringify({
					code: params.code,
					password: document.getElementById("password")["value"],
				})
			}).then(res => res.json())
			.then(res => {
				document.getElementById("notmatch").classList.add("hidden");
				document.getElementById("next").disabled = false;
				if(res.message === "Invalid code") return window.location.href = "/signin";
				else if(res.error) {
					document.getElementById("ise").classList.remove("hidden");
				} else return window.location.href = "/signin";
			});
		}
    }
	
	function cf_callback(token) {
		cf_callback = token;
	}
</script>
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
