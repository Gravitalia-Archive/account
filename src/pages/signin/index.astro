---
import Layout from "../../layouts/Layout.astro";
import { t } from "../../../Translator";

const locale = `; ${Astro.request.headers.get("cookie")}`?.split(`; locale=`)[1]?.split(";")[0] ||
Astro.request.headers.get("accept-language")?.split(",")[0]?.split("-")[0] ||
"en";
const cookie = `; ${Astro.request.headers.get("cookie")}`?.split(`; session=`)[1]?.split(";")[0];
if(cookie) {
    let user = await fetch("https://oauth.gravitalia.com/users/@me", {
		headers: {
			"Authorization": cookie
		}
	})
	.then(res => res.json())
	.catch(_ => null)
	.then(res => res);
	
	if(user?.username) return Astro.redirect("/");
}
---

<Layout title="Sign in - Gravitalia Account" absolute={true}>
	<p id="ratelimit" class="hidden flex h-10 items-center justify-center bg-[#332b43] px-4 text-sm font-medium text-white sm:px-6 lg:px-8">
		<span class="underline pr-1">{t("Slow down!", locale)} </span> {t("You tried a password too many times... you were blocked for 5 minutes", locale)}
	</p>

	<div id="CF-Token-Generator" class="cf-turnstile" data-sitekey="0x4AAAAAAABG7Pcx4-fniaty" data-theme="auto" data-language={locale} data-callback="cf_callback"></div>
	<div class="mt-28 h-[60vh] xl:h-[50vh] xl:mt-40 flex justify-center items-center">
		<div class="p-11 border-[1px] -mt-10 border-none lg:border-solid border-slate-200 dark:border-zinc-800 dark:bg-zinc-800 rounded-md flex flex-col items-center space-y-3 shadow-sm">
			<br />
			<img width="30" height="30" draggable="false" alt="Gravitalia logo" src="/favicon.webp" />
			<p class="text-lg font-semibold">{t("Let us connect you!", locale)}</p>
			<p class="hidden text-lg font-semibold">{t("Your two-factor code", locale)}</p>
			<br /><br />
			<label for="email" id="invalid_email_label" class="hidden text-sm text-red-500 w-full">{t("Invalid email", locale)}</label>
			<input id="email" type="email" class="p-2 border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-80" placeholder={t("Email adress", locale)} />
			<label for="password" id="invalid_password_label" class="hidden text-sm text-red-500 w-full">{t("Invalid password", locale)}</label>
			<div id="psw" class="hidden flex flex-col space-y-1">
				<input id="password" type="password" class="p-2 border-[1px] border-slate-500 dark:bg-zinc-900 dark:border-zinc-800 rounded w-80" placeholder={t("Password", locale)} />
				<a href="/signin/password" rel="prefetch" class="text-sm text-gray-700 dark:text-white hover:text-gray-800 dark:hover:text-gray-200 w-1/2">{t("Forgot your password?", locale)}</a>
			</div>
			<div id="enter_mfa" class="hidden flex">
				<input autofocus id="1" class="h-12 w-10 border mx-1 rounded-lg flex items-center text-center font-thin text-3xl" maxlength="1" max="9" min="0" inputmode="decimal" onkeydown="mfa_keypress" />
				<input id="2" class="h-12 w-10 border mx-1 rounded-lg flex items-center text-center font-thin text-3xl" maxlength="1" max="9" min="0" inputmode="decimal" onkeydown="mfa_keypress" />
				<input id="3" class="h-12 w-10 border mx-1 rounded-lg flex items-center text-center font-thin text-3xl" maxlength="1" max="9" min="0" inputmode="decimal" onkeydown="mfa_keypress" />
				<input id="4" class="h-12 w-10 border mx-1 rounded-lg flex items-center text-center font-thin text-3xl" maxlength="1" max="9" min="0" inputmode="decimal" onkeydown="mfa_keypress" />
				<input id="5" class="h-12 w-10 border mx-1 rounded-lg flex items-center text-center font-thin text-3xl" maxlength="1" max="9" min="0" inputmode="decimal" onkeydown="mfa_keypress" />
				<input id="6" class="h-12 w-10 border mx-1 rounded-lg flex items-center text-center font-thin text-3xl" maxlength="1" max="9" min="0" inputmode="decimal" onkeydown="mfa_keypress" />
			</div>
			<div class="flex justify-between w-full">
				<a href="/signup" rel="prefetch" id="create_acc" class="text-sm px-2 py-2 bg-indigo-50 dark:bg-opacity-0 dark:border-none outline-none border border-indigo-100 rounded text-indigo-500 dark:text-white font-medium hover:bg-indigo-400 dark:hover:bg-indigo-500 hover:text-white transition-colors duration-200">
					{t("Create account", locale)}
				</a>
				<button id="back_btn" onclick="back()" class="hidden text-sm px-2 py-2 bg-indigo-50 dark:bg-opacity-0 dark:border-none outline-none border border-indigo-100 rounded text-indigo-500 dark:text-white font-medium hover:bg-indigo-400 dark:hover:bg-indigo-500 hover:text-white transition-colors duration-200">
					{t("Back", locale)}
				</button>
				<button id="next" onclick="next()" class="text-sm px-4 py-2 outline-none rounded bg-[#332b43] dark:bg-indigo-500 dark:hover:bg-indigo-600 font-medium text-white disabled:opacity-75 transition-colors duration-200 disabled:cursor-not-allowed">
					{t("Next", locale)}
				</button>
			</div>
		</div>
	</div>
</Layout>

<script lang="js">
	let cf_token = "";

	async function next() {
		document.getElementById("next").disabled = true;
		if(!document.getElementById("create_acc").classList.value.includes("hidden")) {
			if(await login() === "email") {
				document.getElementById("email").classList.add("border-red-500");
				document.getElementById("invalid_email_label").classList.remove("hidden");
			} else {
				document.getElementById("create_acc").classList.add("hidden");
				document.getElementById("invalid_email_label").classList.add("hidden");
				document.getElementById("email").classList.add("hidden");
				document.getElementById("back_btn").classList.remove("hidden");
				document.getElementById("psw").classList.remove("hidden");
				document.getElementById("email").classList.remove("border-red-500");
			}
		} else {
			const call_res = await login();
			if(call_res === "password") {
				document.getElementById("password").classList.add("border-red-500");
				document.getElementById("invalid_password_label").classList.remove("hidden");
			} else if(call_res === "mfa") {
				document.getElementById("psw").classList.add("hidden");
				document.getElementById("next").classList.add("hidden");
				document.getElementById("back").classList.add("hidden");
				document.getElementById("enter_mfa").classList.remove("hidden");
				document.getElementById("email").classList.remove("border-red-500");
			} else if(call_res === "ratelimit") {
				document.getElementById("ratelimit").classList.remove("hidden");
				setTimeout(() => {
					document.getElementById("ratelimit").classList.add("hidden");
				}, 5000*60)
			}
		}
		document.getElementById("next").disabled = false;
	}

	function back() {
		document.getElementById("create_acc").classList.remove("hidden");
		document.getElementById("email").classList.remove("hidden");
		document.getElementById("back_btn").classList.add("hidden");
		document.getElementById("psw").classList.add("hidden");
		document.getElementById("invalid_password_label").classList.add("hidden");
	}

	function login(mfa = null) {
		return new Promise(async (resolve, reject) => {
			if(cf_token.length === 0) {
				const MATCH = document.getElementById("CF-Token-Generator").innerHTML.match(/value=".*">/gm);
				if(!MATCH) setTimeout(() => {return login(mfa)}, 1000);
				else cf_token = MATCH[0]?.replace(/value="/g, "")?.replace(/">/g, "");
			}

			if(document.getElementById("email").value === "") return resolve("email");
			fetch("https://oauth.gravitalia.com/login", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
					"CF-Turnstile-Token": cf_token,
				},
				body: JSON.stringify({
					email: document.getElementById("email")["value"],
					password: document.getElementById("password").value === "" ? "Password1234(DontUsePls)" : document.getElementById("password").value,
					mfa
				})
			})
			.catch(_ => resolve("email"))
			.then(res => res.json())
			.then(res => {
				if(res?.message === "Invalid email" || res?.message === "Invalid user") {
					resolve("email");
				} else if(res?.message === "Invalid password") {
					resolve("password");
				} if(res?.message === "MFA") {
					resolve("mfa");
				} else if(res?.error) {
					resolve("ratelimit");
				} else {
					document.cookie = `session=${res.message}; max-age=5256000; SameSite=strict; secure;`;
					setTimeout(() => {
						window.location.href = "/";
					}, 500)
				}
			});
		});
	}

	async function mfa_keypress(event) {
		if(event.key === "Backspace") {
			if(event.target.id-1 === 0) {
				document.getElementById(event.target.id)["value"] = "";
			} else {
				document.getElementById(`${event.target.id-1}`).focus();
				document.getElementById(`${event.target.id}`)["value"] = "";
			}
		} else if([ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ].includes(event.key)) {
			let Id = parseInt(event.target.id);
			if(Id === 6) {
				let code = "";
				for(let i = 1; i < 6; i++) {
					code += document.getElementById(`${i}`)["value"];
				}
				if(code.length === 6) {
					const call_res = await login(code);
					if(call_res !== "mfa") {
						window.location.href = `/signin/next?token=${call_res}`;
					}
				}
			} else {
				setTimeout(() => {
					document.getElementById(`${Id+1}`).focus();
				}, 50);
				document.getElementById(`${Id+1}`)["value"] = "";
			}
		}
	}
	
	function cf_callback(token) {
		cf_callback = token;
	}
</script>
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
